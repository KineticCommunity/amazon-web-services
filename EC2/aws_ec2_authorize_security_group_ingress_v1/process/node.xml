<?xml version="1.0" encoding="UTF-8"?>
<taskDefinition id="aws_ec2_authorize_security_group_ingress" name="AWS EC2 Authorize Security Group Ingress" schema_version="1.0" version="1">
    <author>support@kineticdata.com</author>
    <description>Add a security group ingress rule to a security group.  This handler implements a subset of the full AWS call (single rule submission only)</description>
    <helpurl></helpurl>
    <visible>true</visible>
    <deferrable>false</deferrable>
    <parameters>
        <parameter id="dry_run" label="Dry Run" required="true"
            tooltip="true or false. Dry run validates user permissions. Error response will be 'DryRunOperation' if the account has the proper permissions; 'UnauthorizedOperation' if the account does not have the proper permissions.">false</parameter>
        <parameter id="group_name" label="Group Name" required="false"
            tooltip="The name of the security group. Normally used for the EC2-Classic or the default VPC security group. Must match an existing value in AWS." />
        <parameter id="group_id" label="Group ID" required="false"
            tooltip="The ID of the security group. Required for a non-default VPC." />
        <parameter id="source_security_group_name" label="Source Security Group Name" required="false"
            tooltip="The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. For EC2-VPC, the source security group must be in the same VPC." />
        <parameter id="source_security_owner_id" label="Source Security Owner ID" required="false"
            tooltip="The AWS account number for the source security group. For EC2-VPC, the source security group must be in the same VPC. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead." />
        <parameter id="ip_protocol" label="IP Protocol" required="false"
            tooltip="The IP protocol name (tcp, udp, icmp). (VPC only) Use -1 to specify all." />
        <parameter id="from_port" label="From Port" required="false"
            tooltip="The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use -1 to specify all ICMP types." />
        <parameter id="to_port" label="To Port" required="false"
            tooltip="The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use -1 to specify all ICMP codes for the ICMP type." />
        <parameter id="cidr_ip" label="CIDR IP Address Range" required="false"
            tooltip="The CIDR IP address range. You can't specify this parameter when specifying a source security group." />
    </parameters>
    <handler name="aws_ec2_authorize_security_group_ingress" version="1">
        <infos>
            <info name="access_key_id">&lt;%= @info['access_key_id'] %&gt;</info>
            <info name="secret_access_key">&lt;%= @info['secret_access_key'] %&gt;</info>
            <info name="region">&lt;%= @info['region'] %&gt;</info>
            <info name="enable_debug_logging">&lt;%= @info['enable_debug_logging'] %&gt;</info>
        </infos>
        <parameters>
            <parameter name='dry_run'>&lt;%= @parameters['dry_run'] %&gt;</parameter>
            <parameter name='group_name'>&lt;%= @parameters['group_name'] %&gt;</parameter>
            <parameter name='group_id'>&lt;%= @parameters['group_id'] %&gt;</parameter>
            <parameter name='source_security_group_name'>&lt;%= @parameters['source_security_group_name'] %&gt;</parameter>
            <parameter name='source_security_owner_id'>&lt;%= @parameters['source_security_owner_id'] %&gt;</parameter>
            <parameter name='ip_protocol'>&lt;%= @parameters['ip_protocol'] %&gt;</parameter>
            <parameter name='from_port'>&lt;%= @parameters['from_port'] %&gt;</parameter>
            <parameter name='to_port'>&lt;%= @parameters['to_port'] %&gt;</parameter>
            <parameter name='cidr_ip'>&lt;%= @parameters['cidr_ip'] %&gt;</parameter>
        </parameters>
    </handler>
    <results format="xml">
        <result name="message"/>
    </results>
</taskDefinition>
